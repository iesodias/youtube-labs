name: Deploy Bicep to Azure

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  validate:
    name: üîé Validar Bicep
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do c√≥digo
        uses: actions/checkout@v3

      - name: Login no Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Instalar o Bicep
        run: az bicep install

      - name: Criar Resource Group Tempor√°rio
        run: az group create --name bicep-validation-tmp --location eastus

      - name: Validar Template Bicep
        run: |
          az deployment group validate \
            --resource-group bicep-validation-tmp \
            --template-file main.bicep \
            --parameters adminPassword=${{ secrets.ADMIN_PASSWORD }}

      - name: What-If (Pr√©via da implanta√ß√£o)
        run: |
          az deployment group what-if \
            --resource-group bicep-validation-tmp \
            --template-file main.bicep \
            --parameters adminPassword=${{ secrets.ADMIN_PASSWORD }}

      - name: Remover Resource Group Tempor√°rio
        if: always()
        run: az group delete --name bicep-validation-tmp --yes --no-wait

  deploy:
    name: üöÄ Deploy e Configura√ß√£o
    needs: validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do c√≥digo
        uses: actions/checkout@v3

      - name: Login no Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Instalar o Bicep
        run: az bicep install

      - name: Verificar e Criar Grupo de Recursos
        run: |
          if [ "$(az group exists --name bicep-rg)" = "false" ]; then
            az group create --name bicep-rg --location eastus
          else
            echo "Grupo de recursos 'bicep-rg' j√° existe."
          fi

      - name: Implantar Bicep e Capturar Outputs
        id: deploy_bicep
        run: |
          outputs=$(az deployment group create \
            --resource-group bicep-rg \
            --template-file main.bicep \
            --parameters adminPassword=${{ secrets.ADMIN_PASSWORD }} \
            --query properties.outputs)
          echo "$outputs" > bicep_outputs.json

      - name: Definir Vari√°veis de Ambiente
        run: |
          vmName=$(jq -r '.vmName.value' bicep_outputs.json)
          adminUsername=$(jq -r '.adminUsername.value' bicep_outputs.json)
          publicIP=$(jq -r '.publicIP.value' bicep_outputs.json)
          sshCommand=$(jq -r '.sshCommand.value' bicep_outputs.json)
          echo "VM_NAME=$vmName" >> $GITHUB_ENV
          echo "ADMIN_USERNAME=$adminUsername" >> $GITHUB_ENV
          echo "PUBLIC_IP=$publicIP" >> $GITHUB_ENV
          echo "SSH_COMMAND=$sshCommand" >> $GITHUB_ENV

      - name: Validar Vari√°veis Capturadas
        run: |
          echo "Nome da VM: $VM_NAME"
          echo "Nome do Administrador: $ADMIN_USERNAME"
          echo "Endere√ßo IP P√∫blico: $PUBLIC_IP"
          echo "Comando SSH: $SSH_COMMAND"

      - name: Instalar Ansible e sshpass
        run: |
          sudo apt-get update
          sudo apt-get install -y ansible sshpass

      - name: Criar Invent√°rio Ansible
        run: |
          echo "[vm]" > inventory
          echo "$PUBLIC_IP ansible_user=$ADMIN_USERNAME ansible_password=${{ secrets.ADMIN_PASSWORD }} ansible_ssh_common_args='-o StrictHostKeyChecking=no'" >> inventory

      - name: Executar Playbook Ansible para Instalar Docker
        run: |
          ansible-playbook -i inventory ansible/playbook.yaml --extra-vars "ansible_sudo_pass=${{ secrets.ADMIN_PASSWORD }}"

      - name: Testar Aplica√ß√£o HTTP na Porta 8081
        run: |
          echo "Aguardando aplica√ß√£o subir..."
          sleep 30
          response=$(curl -s -o /dev/null -w "%{http_code}" http://$PUBLIC_IP:8081)
          if [ "$response" != "200" ]; then
            echo "A aplica√ß√£o n√£o respondeu com sucesso. Status: $response"
            exit 1
          else
            echo "‚úÖ Aplica√ß√£o respondendo com sucesso na porta 8081!"
          fi